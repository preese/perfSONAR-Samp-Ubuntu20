---

- hosts: [md-arch]
  gather_facts: true
  become: yes
  tasks:
    - name: Copy PS-release list
      ansible.builtin.get_url:
        url: http://downloads.perfsonar.net/debian/perfsonar-release.list
        dest: .

    - name: Deploy PS-release list 
      copy:
        src: perfsonar-release.list
        dest: /etc/apt/sources.list.d/
        owner: vagrant
        group: vagrant

    - name: Add an Apt signing key, uses whichever key is at the URL
      ansible.builtin.apt_key:
        url: http://downloads.perfsonar.net/debian/perfsonar-official.gpg.key
        state: present

    - name: Apt update
      apt:
        update_cache: yes

    - name: For maddash VM, add maddash and archive rpms to MaDDash Server
      apt:
        name:          
          - firewalld
          - perfsonar-archive
          - perfsonar-psconfig-publisher
          - maddash
        state: present

    - name: Allow all IPs on net to access archiver's opensearch tool
      ansible.builtin.lineinfile:
        path: /etc/apache2/conf-available/apache-logstash.conf
        regexp: '^(\s*# Require ip 10\.1\.1\.0/24)$'
        line: 'Require ip 192.168.0.0/23'
        backrefs: yes

    - name: Start FW service if not running
      service:
        name: firewalld
        state: started

    - name: Enable FW service
      service:
        name: firewalld
        enabled: yes

    - name: Add http to firewall
      firewalld:
        service: http
        permanent: yes
        immediate: yes
        state: enabled

    - name: Add https to firewall
      firewalld:
        service: https
        permanent: yes
        immediate: yes
        state: enabled

    - name: Copy mesh.json file to Maddash node from Vagrant host
      copy:
        src: ./mesh.json
        dest: /home/vagrant/mesh.json
        owner: vagrant
        group: vagrant

    - name: Publish mesh.json file
      command: "psconfig publish /home/vagrant/mesh.json"

    - name: Remote add file, lets the archive know where the JSON config file lives
      command: 'psconfig remote add "https://192.168.0.54/psconfig/mesh.json"'

    - name: Add new project name for web site
      ansible.builtin.replace:
        path: /etc/maddash/maddash-webui/config.json
        regexp: '"My perfSONAR Dashboard"'
        replace: '"Ubuntu20-ps-v5"'

    - name: Add correct grid name, so it opens first
      ansible.builtin.replace:
        path: /etc/maddash/maddash-webui/config.json
        regexp: '"My Sites"'
        replace: '"U20-ps-v5-grid"'

    - name: Restart psconfig-maddash-agent
      service:
        name: psconfig-maddash-agent
        state: restarted

    - name: Restart httpd/apache2
      service:
        name: apache2
        state: restarted

    - name: Shorten test times, packet loss, every 5min
      command: "psconfig maddash-grid edit --name default_loss --check-interval PT5M"

    - name: Shorten test time, throughput, every 2hr
      command: "psconfig maddash-grid edit --name default_throughput --check-interval PT2H"

- hosts: [testpoint]
  gather_facts: true
  become: yes
  tasks:
    - name: Copy PS-release list
      ansible.builtin.get_url:
        url: http://downloads.perfsonar.net/debian/perfsonar-release.list
        dest: .

    - name: Copy PS-release list
      copy:
        src: perfsonar-release.list
        dest: /etc/apt/sources.list.d/
        owner: vagrant
        group: vagrant

    - name: Add an Apt signing key, uses whichever key is at the URL
      ansible.builtin.apt_key:
        url: http://downloads.perfsonar.net/debian/perfsonar-official.gpg.key
        state: present

    - name: Apt update
      apt:
        update_cache: yes

    - name: Add perfsonar rpms to all testpoint edge nodes
      apt:
        name:
          - perfsonar-testpoint
          - perfsonar-toolkit-ntp
          - perfsonar-toolkit-security
          - perfsonar-toolkit-servicewatcher
        state: present
  
    - name: For testpoint VMs, install remote URL and archives
      command: 'psconfig remote add "https://192.168.0.54/psconfig/mesh.json"'

    - name: For testpoint VMs, restart psconfig-pscheduler-agent
      service:
        name: psconfig-pscheduler-agent
        state: restarted
